// source: common_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var universal_token_pb = require('./universal_token_pb.js');
goog.object.extend(proto, universal_token_pb);
var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
goog.exportSymbol('proto.squareup.xp.oauth.datatypes.Client', null, global);
goog.exportSymbol('proto.squareup.xp.oauth.datatypes.Scope', null, global);
goog.exportSymbol('proto.squareup.xp.oauth.datatypes.ScopeType', null, global);
goog.exportSymbol('proto.squareup.xp.oauth.datatypes.UserType', null, global);
goog.exportSymbol('proto.squareup.xp.oauth.datatypes.scopeType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.xp.oauth.datatypes.Client = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.squareup.xp.oauth.datatypes.Client.repeatedFields_, null);
};
goog.inherits(proto.squareup.xp.oauth.datatypes.Client, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.xp.oauth.datatypes.Client.displayName = 'proto.squareup.xp.oauth.datatypes.Client';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.squareup.xp.oauth.datatypes.Client.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.xp.oauth.datatypes.Client.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.xp.oauth.datatypes.Client} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.xp.oauth.datatypes.Client.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    ownerToken: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    multiunitAware: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    active: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    sandbox: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    owner: (f = msg.getOwner()) && universal_token_pb.UniversalToken.toObject(includeInstance, f),
    ownerScopeList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    defaultApiVersion: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    redirectUri: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    strictRedirectUri: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.xp.oauth.datatypes.Client}
 */
proto.squareup.xp.oauth.datatypes.Client.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.xp.oauth.datatypes.Client;
  return proto.squareup.xp.oauth.datatypes.Client.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.xp.oauth.datatypes.Client} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.xp.oauth.datatypes.Client}
 */
proto.squareup.xp.oauth.datatypes.Client.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerToken(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMultiunitAware(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSandbox(value);
      break;
    case 7:
      var value = new universal_token_pb.UniversalToken;
      reader.readMessage(value,universal_token_pb.UniversalToken.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 8:
      var values = /** @type {!Array<!proto.squareup.xp.oauth.datatypes.Scope>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addOwnerScope(values[i]);
      }
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultApiVersion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectUri(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStrictRedirectUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.xp.oauth.datatypes.Client.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.xp.oauth.datatypes.Client} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.xp.oauth.datatypes.Client.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      universal_token_pb.UniversalToken.serializeBinaryToWriter
    );
  }
  f = message.getOwnerScopeList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner_token = 3;
 * @return {string}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getOwnerToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setOwnerToken = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearOwnerToken = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasOwnerToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool multiunit_aware = 4;
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getMultiunitAware = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setMultiunitAware = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearMultiunitAware = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasMultiunitAware = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool active = 5;
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearActive = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasActive = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool sandbox = 6;
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getSandbox = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setSandbox = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearSandbox = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasSandbox = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional squareup.common.universaltoken.UniversalToken owner = 7;
 * @return {?proto.squareup.common.universaltoken.UniversalToken}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getOwner = function() {
  return /** @type{?proto.squareup.common.universaltoken.UniversalToken} */ (
    jspb.Message.getWrapperField(this, universal_token_pb.UniversalToken, 7));
};


/**
 * @param {?proto.squareup.common.universaltoken.UniversalToken|undefined} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
*/
proto.squareup.xp.oauth.datatypes.Client.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Scope owner_scope = 8;
 * @return {!Array<!proto.squareup.xp.oauth.datatypes.Scope>}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getOwnerScopeList = function() {
  return /** @type {!Array<!proto.squareup.xp.oauth.datatypes.Scope>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<!proto.squareup.xp.oauth.datatypes.Scope>} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setOwnerScopeList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!proto.squareup.xp.oauth.datatypes.Scope} value
 * @param {number=} opt_index
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.addOwnerScope = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearOwnerScopeList = function() {
  return this.setOwnerScopeList([]);
};


/**
 * optional string default_api_version = 9;
 * @return {string}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getDefaultApiVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setDefaultApiVersion = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearDefaultApiVersion = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasDefaultApiVersion = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string redirect_uri = 10;
 * @return {string}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getRedirectUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setRedirectUri = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearRedirectUri = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasRedirectUri = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool strict_redirect_uri = 11;
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.getStrictRedirectUri = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.setStrictRedirectUri = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.xp.oauth.datatypes.Client} returns this
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.clearStrictRedirectUri = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.xp.oauth.datatypes.Client.prototype.hasStrictRedirectUri = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * @enum {number}
 */
proto.squareup.xp.oauth.datatypes.ScopeType = {
  READ_SCOPE: 1,
  WRITE_SCOPE: 2
};

/**
 * @enum {number}
 */
proto.squareup.xp.oauth.datatypes.Scope = {
  READ: 0,
  WRITE: 1,
  MERCHANT_PROFILE_READ: 2,
  SETTLEMENTS_READ: 3,
  BANK_ACCOUNTS_READ: 4,
  ITEMS_READ: 5,
  ITEMS_WRITE: 6,
  PAYMENTS_READ: 7,
  PAYMENTS_WRITE: 8,
  SQUARE_CASH_READ: 9,
  SQUARE_CASH_WRITE: 10,
  ORDERS_READ: 11,
  ORDERS_WRITE: 12,
  SQUARE_CASH_SENDER: 13,
  SQUARE_CASH_RECIPIENT: 14,
  EMPLOYEES_READ: 15,
  EMPLOYEES_WRITE: 16,
  TIMECARDS_READ: 17,
  TIMECARDS_WRITE: 18,
  CUSTOMERS_READ: 19,
  CUSTOMERS_WRITE: 20,
  ORDERS_V2_READ: 21,
  ORDERS_V2_WRITE: 22,
  LOYALTY_READ: 23,
  LOYALTY_WRITE: 24,
  COUPON_READ: 25,
  COUPON_WRITE: 26,
  DEVICE_CREDENTIAL_MANAGEMENT: 27,
  PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS: 28,
  OPENID: 29,
  INVENTORY_READ: 30,
  INVENTORY_WRITE: 31,
  PAYMENTS_WRITE_IN_PERSON: 32,
  TIMECARDS_REPORTS_READ: 33,
  TIMECARDS_REPORTS_WRITE: 34,
  TIMECARDS_SETTINGS_READ: 35,
  TIMECARDS_SETTINGS_WRITE: 36,
  PAYMENTS_REPORTS_READ: 37,
  GIFTCARDS_READ: 38,
  GIFTCARDS_SETTINGS_READ: 39,
  GIFTCARDS_SETTINGS_WRITE: 40,
  LOYALTY_SETTINGS_READ: 41,
  LOYALTY_SETTINGS_WRITE: 42,
  PAYROLL_READ: 43,
  PAYROLL_WRITE: 44,
  FEEDBACK_READ: 45,
  FEEDBACK_WRITE: 46,
  FEEDBACK_SETTINGS_READ: 47,
  FEEDBACK_SETTINGS_WRITE: 48,
  APPOINTMENTS_READ: 49,
  APPOINTMENTS_WRITE: 50,
  CASH_DRAWER_READ: 51,
  CASH_DRAWER_WRITE: 52,
  LEGAL_ENTITIES_READ: 53,
  LEGAL_ENTITIES_WRITE: 54,
  CONNECT_API_ACCESS_WRITE: 55,
  MARKETING_READ: 56,
  MARKETING_WRITE: 57,
  INSTRUMENT_READ: 58,
  INSTRUMENT_WRITE: 59,
  INFORMATION_REQUEST_FORM_READ: 60,
  INFORMATION_REQUEST_FORM_WRITE: 61,
  SERVICE_SETTINGS_READ: 62,
  SERVICE_SETTINGS_WRITE: 63,
  REPORT_CONFIGS_READ: 64,
  REPORT_CONFIGS_WRITE: 65,
  SUBSCRIPTIONS_READ: 66,
  SUBSCRIPTIONS_WRITE: 67,
  MERCHANT_PROFILE_WRITE: 68,
  FINANCIALS_READ: 69,
  FINANCIALS_WRITE: 70,
  INVOICES_READ: 71,
  INVOICES_WRITE: 72,
  READERS_SETTINGS_WRITE: 73,
  BANK_ACCOUNTS_WRITE: 74,
  DEPOSITS_READ: 75,
  DEPOSITS_WRITE: 76,
  DISCOUNT_CODES_READ: 77,
  DISCOUNT_CODES_WRITE: 78,
  LOCATION_DETAILS_READ: 79,
  LOCATION_DETAILS_WRITE: 80,
  GIFTCARD_OFFERINGS_READ: 81,
  APPOINTMENTS_BUSINESS_SETTINGS_READ: 82,
  APPOINTMENTS_BUSINESS_SETTINGS_WRITE: 83,
  SCHEDULES_READ: 84,
  SCHEDULES_WRITE: 85,
  PAYMENT_LIMITS_READ: 86,
  RESERVES_READ: 87,
  FINANCIAL_ACCOUNT_READ: 88,
  FINANCIAL_ACCOUNT_WRITE: 89,
  PAYMENTS_WRITE_SHARED_ONFILE: 90,
  RISK_MANAGER_READ: 91,
  RISK_MANAGER_WRITE: 92,
  ONLINE_STORE_WRITE: 93,
  GIFTCARDS_WRITE: 94,
  LOYALTY_REPORTING_READ: 95,
  LOYALTY_SUSPICIOUS_ACTIVITY_ALERT_READ: 96,
  LOYALTY_SUSPICIOUS_ACTIVITY_ALERT_WRITE: 97,
  REFUNDS_WRITE: 98,
  CONTRACTS_READ: 99,
  CONTRACTS_WRITE: 100,
  BUYER_SUBSCRIPTIONS_READ: 101,
  BUYER_SUBSCRIPTIONS_WRITE: 102,
  API_LOGS_READ: 103,
  MESSENGER_READ: 104,
  MESSENGER_WRITE: 105,
  EGIFTCARD_CONFIG_WRITE: 106,
  INVENTORY_REPORTING_READ: 107,
  ONLINE_STORE_SNIPPETS_WRITE: 108,
  ONLINE_STORE_SNIPPETS_READ: 109,
  ONLINE_STORE_SITE_READ: 110,
  SHORT_URL_WRITE: 111,
  DISPUTES_READ: 112,
  DISPUTES_WRITE: 113,
  APPOINTMENTS_ALL_READ: 114,
  APPOINTMENTS_ALL_WRITE: 115,
  MESSAGING_PREFERENCES_READ: 116,
  MESSAGING_PREFERENCES_WRITE: 117,
  BUYERS_READ: 118,
  BUYERS_WRITE: 119,
  DEVELOPER_PROFILE_READ: 120,
  DEVELOPER_PROFILE_WRITE: 121,
  DEVELOPER_COLLABORATOR_PERMISSIONS_READ: 122,
  DEVELOPER_COLLABORATOR_PERMISSIONS_WRITE: 123,
  DEVELOPER_SANDBOX_ACCOUNT_READ: 124,
  DEVELOPER_SANDBOX_ACCOUNT_WRITE: 125,
  DEVELOPER_APPLICATION_READ: 126,
  DEVELOPER_APPLICATION_WRITE: 127,
  DEVELOPER_APPLICATION_CREDENTIALS_READ: 128,
  DEVELOPER_APPLICATION_CREDENTIALS_WRITE: 129,
  DEVELOPER_APPLICATION_OAUTH_READ: 130,
  DEVELOPER_APPLICATION_OAUTH_WRITE: 131,
  DEVELOPER_APPLICATION_WEBHOOKS_READ: 132,
  DEVELOPER_APPLICATION_WEBHOOKS_WRITE: 133,
  DEVELOPER_APPLICATION_READER_SDK_READ: 134,
  DEVELOPER_APPLICATION_READER_SDK_WRITE: 135,
  DEVELOPER_APPLICATION_POINT_OF_SALE_API_READ: 136,
  DEVELOPER_APPLICATION_POINT_OF_SALE_API_WRITE: 137,
  DEVELOPER_APPLICATION_APPLE_PAY_READ: 138,
  DEVELOPER_APPLICATION_APPLE_PAY_WRITE: 139,
  DEVELOPER_APPLICATION_REVIEWS_READ: 140,
  DEVELOPER_APPLICATION_REVIEWS_WRITE: 141,
  DEVELOPER_APPLICATION_SUBMISSIONS_READ: 142,
  DEVELOPER_APPLICATION_SUBMISSIONS_WRITE: 143,
  MANAGE_CUSTOMER_CAMPAIGNS_WRITE: 144,
  MANAGE_HARDWARE_SETTINGS_READ: 145,
  MANAGE_HARDWARE_SETTINGS_WRITE: 146,
  PROJECTS_READ: 147,
  PROJECTS_WRITE: 148,
  CUSTOMERBALANCES_READ: 149,
  CUSTOMERBALANCES_WRITE: 150,
  VENDOR_READ: 151,
  VENDOR_WRITE: 152,
  PAYOUTS_READ: 153,
  SQUARE_BANKING_ACCOUNTS_READ: 154,
  ROLES_READ: 155,
  ROLES_WRITE: 156,
  POLICIES_READ: 157,
  POLICIES_WRITE: 158
};

/**
 * @enum {number}
 */
proto.squareup.xp.oauth.datatypes.UserType = {
  UNKNOWN: 0,
  WEB: 1,
  CASH: 2,
  MERCHANT: 3,
  UNIT: 4,
  SINGLE_UNIT_MERCHANT: 5,
  PLATFORM_ACCOUNT: 6
};


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `scopeType`.
 * @type {!jspb.ExtensionFieldInfo<!proto.squareup.xp.oauth.datatypes.ScopeType>}
 */
proto.squareup.xp.oauth.datatypes.scopeType = new jspb.ExtensionFieldInfo(
    50001,
    {scopeType: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

google_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[50001] = new jspb.ExtensionFieldBinaryInfo(
    proto.squareup.xp.oauth.datatypes.scopeType,
    jspb.BinaryReader.prototype.readEnum,
    jspb.BinaryWriter.prototype.writeEnum,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumValueOptions.extensions[50001] = proto.squareup.xp.oauth.datatypes.scopeType;

goog.object.extend(exports, proto.squareup.xp.oauth.datatypes);
