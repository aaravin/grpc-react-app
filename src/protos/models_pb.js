// source: models.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var currency_pb = require('./currency_pb.js');
goog.object.extend(proto, currency_pb);
var time_pb = require('./time_pb.js');
goog.object.extend(proto, time_pb);
var validation_pb = require('./validation_pb.js');
goog.object.extend(proto, validation_pb);
goog.exportSymbol('proto.squareup.capital.plan.models.ChargeOff', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.ChargeOff.Reason', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.ChargeOff.ReversalReason', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Fund', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PaymentSchedule', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Plan', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Plan.PaymentFrequency', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Plan.RiskGrade', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Plan.Status', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanDelinquency', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanDelinquency.Type', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanFilter', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanMetadata', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanPastDueSnapshot', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanPerformance', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.PlanQuery', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Product', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Product.TermType', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.SettlementDetail', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.SettlementInstruction', null, global);
goog.exportSymbol('proto.squareup.capital.plan.models.Txn', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.Product.displayName = 'proto.squareup.capital.plan.models.Product';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.ChargeOff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.ChargeOff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.ChargeOff.displayName = 'proto.squareup.capital.plan.models.ChargeOff';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PaymentSchedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PaymentSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PaymentSchedule.displayName = 'proto.squareup.capital.plan.models.PaymentSchedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.Plan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.squareup.capital.plan.models.Plan.repeatedFields_, null);
};
goog.inherits(proto.squareup.capital.plan.models.Plan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.Plan.displayName = 'proto.squareup.capital.plan.models.Plan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.displayName = 'proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PlanMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PlanMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PlanMetadata.displayName = 'proto.squareup.capital.plan.models.PlanMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PlanDelinquency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PlanDelinquency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PlanDelinquency.displayName = 'proto.squareup.capital.plan.models.PlanDelinquency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.Txn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.Txn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.Txn.displayName = 'proto.squareup.capital.plan.models.Txn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.SettlementDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.squareup.capital.plan.models.SettlementDetail.repeatedFields_, null);
};
goog.inherits(proto.squareup.capital.plan.models.SettlementDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.SettlementDetail.displayName = 'proto.squareup.capital.plan.models.SettlementDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.SettlementInstruction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.SettlementInstruction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.SettlementInstruction.displayName = 'proto.squareup.capital.plan.models.SettlementInstruction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PlanPerformance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PlanPerformance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PlanPerformance.displayName = 'proto.squareup.capital.plan.models.PlanPerformance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PlanPastDueSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PlanPastDueSnapshot.displayName = 'proto.squareup.capital.plan.models.PlanPastDueSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PlanFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PlanFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PlanFilter.displayName = 'proto.squareup.capital.plan.models.PlanFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.PlanQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.PlanQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.PlanQuery.displayName = 'proto.squareup.capital.plan.models.PlanQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.squareup.capital.plan.models.Fund = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.squareup.capital.plan.models.Fund, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.squareup.capital.plan.models.Fund.displayName = 'proto.squareup.capital.plan.models.Fund';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    paymentMethod: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    paymentPeriod: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    prepayAllowed: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    termType: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.Product}
 */
proto.squareup.capital.plan.models.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.Product;
  return proto.squareup.capital.plan.models.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.Product}
 */
proto.squareup.capital.plan.models.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentPeriod(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrepayAllowed(value);
      break;
    case 8:
      var value = /** @type {!proto.squareup.capital.plan.models.Product.TermType} */ (reader.readEnum());
      msg.setTermType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.Product.TermType} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.Product.TermType = {
  TT_DO_NOT_USE: 0,
  FIXED: 1,
  VARIABLE: 2
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.Product.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.squareup.capital.plan.models.Product.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string payment_method = 3;
 * @return {string}
 */
proto.squareup.capital.plan.models.Product.prototype.getPaymentMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.clearPaymentMethod = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.hasPaymentMethod = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string payment_period = 4;
 * @return {string}
 */
proto.squareup.capital.plan.models.Product.prototype.getPaymentPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.setPaymentPeriod = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.clearPaymentPeriod = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.hasPaymentPeriod = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool prepay_allowed = 6;
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.getPrepayAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.setPrepayAllowed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.clearPrepayAllowed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.hasPrepayAllowed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TermType term_type = 8;
 * @return {!proto.squareup.capital.plan.models.Product.TermType}
 */
proto.squareup.capital.plan.models.Product.prototype.getTermType = function() {
  return /** @type {!proto.squareup.capital.plan.models.Product.TermType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.Product.TermType} value
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.setTermType = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Product} returns this
 */
proto.squareup.capital.plan.models.Product.prototype.clearTermType = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Product.prototype.hasTermType = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.ChargeOff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.ChargeOff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.ChargeOff.toObject = function(includeInstance, msg) {
  var f, obj = {
    chargeOffReason: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    createdAt: (f = msg.getCreatedAt()) && time_pb.DateTime.toObject(includeInstance, f),
    chargeOffAmount: (f = msg.getChargeOffAmount()) && currency_pb.Money.toObject(includeInstance, f),
    chargeOffPrincipalAmount: (f = msg.getChargeOffPrincipalAmount()) && currency_pb.Money.toObject(includeInstance, f),
    chargeOffInterestAmount: (f = msg.getChargeOffInterestAmount()) && currency_pb.Money.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.ChargeOff}
 */
proto.squareup.capital.plan.models.ChargeOff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.ChargeOff;
  return proto.squareup.capital.plan.models.ChargeOff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.ChargeOff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.ChargeOff}
 */
proto.squareup.capital.plan.models.ChargeOff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.squareup.capital.plan.models.ChargeOff.Reason} */ (reader.readEnum());
      msg.setChargeOffReason(value);
      break;
    case 2:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setChargeOffAmount(value);
      break;
    case 4:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setChargeOffPrincipalAmount(value);
      break;
    case 5:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setChargeOffInterestAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.ChargeOff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.ChargeOff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.ChargeOff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.squareup.capital.plan.models.ChargeOff.Reason} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getChargeOffAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getChargeOffPrincipalAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getChargeOffInterestAmount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.ChargeOff.Reason = {
  NONE: 0,
  BANKRUPTCY: 1,
  DECEASED: 2,
  FRAUDULENT: 3,
  DAYS_PAST_DUE_120: 4
};

/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.ChargeOff.ReversalReason = {
  GENERIC_ERROR: 0,
  LAST_PAYMENT_APPLICATION: 1
};

/**
 * optional Reason charge_off_reason = 1;
 * @return {!proto.squareup.capital.plan.models.ChargeOff.Reason}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.getChargeOffReason = function() {
  return /** @type {!proto.squareup.capital.plan.models.ChargeOff.Reason} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.ChargeOff.Reason} value
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.setChargeOffReason = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.clearChargeOffReason = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.hasChargeOffReason = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional squareup.common.time.DateTime created_at = 2;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.getCreatedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 2));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
*/
proto.squareup.capital.plan.models.ChargeOff.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional squareup.common.Money charge_off_amount = 3;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.getChargeOffAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 3));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
*/
proto.squareup.capital.plan.models.ChargeOff.prototype.setChargeOffAmount = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.clearChargeOffAmount = function() {
  return this.setChargeOffAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.hasChargeOffAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional squareup.common.Money charge_off_principal_amount = 4;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.getChargeOffPrincipalAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 4));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
*/
proto.squareup.capital.plan.models.ChargeOff.prototype.setChargeOffPrincipalAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.clearChargeOffPrincipalAmount = function() {
  return this.setChargeOffPrincipalAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.hasChargeOffPrincipalAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional squareup.common.Money charge_off_interest_amount = 5;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.getChargeOffInterestAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 5));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
*/
proto.squareup.capital.plan.models.ChargeOff.prototype.setChargeOffInterestAmount = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.ChargeOff} returns this
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.clearChargeOffInterestAmount = function() {
  return this.setChargeOffInterestAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.ChargeOff.prototype.hasChargeOffInterestAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PaymentSchedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PaymentSchedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PaymentSchedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    recurrenceRule: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    paymentScheduleMethod: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    recurrenceStartAt: (f = msg.getRecurrenceStartAt()) && time_pb.DateTime.toObject(includeInstance, f),
    automaticPaymentAmountType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    customPaymentAmount: (f = msg.getCustomPaymentAmount()) && currency_pb.Money.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule}
 */
proto.squareup.capital.plan.models.PaymentSchedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PaymentSchedule;
  return proto.squareup.capital.plan.models.PaymentSchedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PaymentSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule}
 */
proto.squareup.capital.plan.models.PaymentSchedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrenceRule(value);
      break;
    case 2:
      var value = /** @type {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod} */ (reader.readEnum());
      msg.setPaymentScheduleMethod(value);
      break;
    case 3:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setRecurrenceStartAt(value);
      break;
    case 4:
      var value = /** @type {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType} */ (reader.readEnum());
      msg.setAutomaticPaymentAmountType(value);
      break;
    case 5:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setCustomPaymentAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PaymentSchedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PaymentSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PaymentSchedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRecurrenceStartAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCustomPaymentAmount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod = {
  PSM_DO_NOT_USE: 0,
  AUTOMATIC: 1,
  MAIL: 2,
  MANUAL_ELECTRONIC: 3,
  MANUAL_MAIL: 4
};

/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType = {
  PAT_DO_NOT_USE: 0,
  PLAN_SCHEDULED_PAYMENT: 1,
  CUSTOM: 2,
  PLAN_DELINQUENCY_PRIMARY: 3,
  PLAN_DELINQUENCY_MONTHLY_STATEMENT: 4
};

/**
 * optional string recurrence_rule = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.getRecurrenceRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.setRecurrenceRule = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.clearRecurrenceRule = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.hasRecurrenceRule = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PaymentScheduleMethod payment_schedule_method = 2;
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.getPaymentScheduleMethod = function() {
  return /** @type {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentScheduleMethod} value
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.setPaymentScheduleMethod = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.clearPaymentScheduleMethod = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.hasPaymentScheduleMethod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional squareup.common.time.DateTime recurrence_start_at = 3;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.getRecurrenceStartAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 3));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
*/
proto.squareup.capital.plan.models.PaymentSchedule.prototype.setRecurrenceStartAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.clearRecurrenceStartAt = function() {
  return this.setRecurrenceStartAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.hasRecurrenceStartAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PaymentAmountType automatic_payment_amount_type = 4;
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.getAutomaticPaymentAmountType = function() {
  return /** @type {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.PaymentSchedule.PaymentAmountType} value
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.setAutomaticPaymentAmountType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.clearAutomaticPaymentAmountType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.hasAutomaticPaymentAmountType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional squareup.common.Money custom_payment_amount = 5;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.getCustomPaymentAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 5));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
*/
proto.squareup.capital.plan.models.PaymentSchedule.prototype.setCustomPaymentAmount = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PaymentSchedule} returns this
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.clearCustomPaymentAmount = function() {
  return this.setCustomPaymentAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PaymentSchedule.prototype.hasCustomPaymentAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.squareup.capital.plan.models.Plan.repeatedFields_ = [62,84];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.Plan.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.Plan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.Plan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Plan.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    productName: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    productVersion: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    financedAmount: (f = msg.getFinancedAmount()) && currency_pb.Money.toObject(includeInstance, f),
    feeAmount: (f = msg.getFeeAmount()) && currency_pb.Money.toObject(includeInstance, f),
    interestRateBps: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    aprBps: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    paymentAmount: (f = msg.getPaymentAmount()) && currency_pb.Money.toObject(includeInstance, f),
    numberPaymentPeriods: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    remainingBalance: (f = msg.getRemainingBalance()) && currency_pb.Money.toObject(includeInstance, f),
    customerToken: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    amortizationScheduleFinalPaymentAmount: (f = msg.getAmortizationScheduleFinalPaymentAmount()) && currency_pb.Money.toObject(includeInstance, f),
    amortizationScheduleInterestFinanceCharge: (f = msg.getAmortizationScheduleInterestFinanceCharge()) && currency_pb.Money.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && time_pb.DateTime.toObject(includeInstance, f),
    originatedAt: (f = msg.getOriginatedAt()) && time_pb.DateTime.toObject(includeInstance, f),
    allocatedAt: (f = msg.getAllocatedAt()) && time_pb.DateTime.toObject(includeInstance, f),
    closedAt: (f = msg.getClosedAt()) && time_pb.DateTime.toObject(includeInstance, f),
    maturityAt: (f = msg.getMaturityAt()) && time_pb.DateTime.toObject(includeInstance, f),
    isRenewal: (f = jspb.Message.getBooleanField(msg, 56)) == null ? undefined : f,
    repaymentStartDate: (f = msg.getRepaymentStartDate()) && time_pb.DateTime.toObject(includeInstance, f),
    paymentHoldRate: (f = jspb.Message.getOptionalFloatingPointField(msg, 58)) == null ? undefined : f,
    acceptanceDate: (f = msg.getAcceptanceDate()) && time_pb.DateTime.toObject(includeInstance, f),
    riskGrade: (f = jspb.Message.getField(msg, 61)) == null ? undefined : f,
    tagsList: (f = jspb.Message.getRepeatedField(msg, 62)) == null ? undefined : f,
    holdRateBps: (f = jspb.Message.getOptionalFloatingPointField(msg, 63)) == null ? undefined : f,
    paymentFrequency: (f = jspb.Message.getField(msg, 64)) == null ? undefined : f,
    requiredPaymentAmount: (f = msg.getRequiredPaymentAmount()) && currency_pb.Money.toObject(includeInstance, f),
    identityToken: (f = jspb.Message.getField(msg, 66)) == null ? undefined : f,
    planId: (f = jspb.Message.getField(msg, 67)) == null ? undefined : f,
    closeAmount: (f = msg.getCloseAmount()) && currency_pb.Money.toObject(includeInstance, f),
    numberMonthsToMaturity: (f = jspb.Message.getField(msg, 69)) == null ? undefined : f,
    craEligible: (f = jspb.Message.getBooleanField(msg, 70)) == null ? undefined : f,
    product: (f = msg.getProduct()) && proto.squareup.capital.plan.models.Product.toObject(includeInstance, f),
    creditLimitAmount: (f = msg.getCreditLimitAmount()) && currency_pb.Money.toObject(includeInstance, f),
    effectiveHoldRateBps: (f = jspb.Message.getOptionalFloatingPointField(msg, 73)) == null ? undefined : f,
    fundPlanToken: (f = jspb.Message.getField(msg, 74)) == null ? undefined : f,
    enabledPaymentSchedule: (f = msg.getEnabledPaymentSchedule()) && proto.squareup.capital.plan.models.PaymentSchedule.toObject(includeInstance, f),
    servicerFundCode: (f = jspb.Message.getField(msg, 76)) == null ? undefined : f,
    servicerFundName: (f = jspb.Message.getField(msg, 77)) == null ? undefined : f,
    originatorFundCode: (f = jspb.Message.getField(msg, 78)) == null ? undefined : f,
    originatorFundName: (f = jspb.Message.getField(msg, 79)) == null ? undefined : f,
    originatorFund: (f = msg.getOriginatorFund()) && proto.squareup.capital.plan.models.Fund.toObject(includeInstance, f),
    paymentSettlementConfig: (f = msg.getPaymentSettlementConfig()) && proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.toObject(includeInstance, f),
    penaltyRateBps: (f = jspb.Message.getField(msg, 82)) == null ? undefined : f,
    penaltyAmount: (f = msg.getPenaltyAmount()) && currency_pb.Money.toObject(includeInstance, f),
    billingDatesList: jspb.Message.toObjectList(msg.getBillingDatesList(),
    time_pb.DateTime.toObject, includeInstance),
    firstPlanForBorrower: (f = jspb.Message.getBooleanField(msg, 85)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.Plan}
 */
proto.squareup.capital.plan.models.Plan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.Plan;
  return proto.squareup.capital.plan.models.Plan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.Plan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.Plan}
 */
proto.squareup.capital.plan.models.Plan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductVersion(value);
      break;
    case 5:
      var value = /** @type {!proto.squareup.capital.plan.models.Plan.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setFinancedAmount(value);
      break;
    case 7:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setFeeAmount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInterestRateBps(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAprBps(value);
      break;
    case 11:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setPaymentAmount(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNumberPaymentPeriods(value);
      break;
    case 13:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setRemainingBalance(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerToken(value);
      break;
    case 18:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setAmortizationScheduleFinalPaymentAmount(value);
      break;
    case 19:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setAmortizationScheduleInterestFinanceCharge(value);
      break;
    case 51:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 52:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setOriginatedAt(value);
      break;
    case 53:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setAllocatedAt(value);
      break;
    case 54:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setClosedAt(value);
      break;
    case 55:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setMaturityAt(value);
      break;
    case 56:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRenewal(value);
      break;
    case 57:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setRepaymentStartDate(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPaymentHoldRate(value);
      break;
    case 59:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setAcceptanceDate(value);
      break;
    case 61:
      var value = /** @type {!proto.squareup.capital.plan.models.Plan.RiskGrade} */ (reader.readEnum());
      msg.setRiskGrade(value);
      break;
    case 62:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHoldRateBps(value);
      break;
    case 64:
      var value = /** @type {!proto.squareup.capital.plan.models.Plan.PaymentFrequency} */ (reader.readEnum());
      msg.setPaymentFrequency(value);
      break;
    case 65:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setRequiredPaymentAmount(value);
      break;
    case 66:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentityToken(value);
      break;
    case 67:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanId(value);
      break;
    case 68:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setCloseAmount(value);
      break;
    case 69:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberMonthsToMaturity(value);
      break;
    case 70:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCraEligible(value);
      break;
    case 71:
      var value = new proto.squareup.capital.plan.models.Product;
      reader.readMessage(value,proto.squareup.capital.plan.models.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    case 72:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setCreditLimitAmount(value);
      break;
    case 73:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEffectiveHoldRateBps(value);
      break;
    case 74:
      var value = /** @type {string} */ (reader.readString());
      msg.setFundPlanToken(value);
      break;
    case 75:
      var value = new proto.squareup.capital.plan.models.PaymentSchedule;
      reader.readMessage(value,proto.squareup.capital.plan.models.PaymentSchedule.deserializeBinaryFromReader);
      msg.setEnabledPaymentSchedule(value);
      break;
    case 76:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicerFundCode(value);
      break;
    case 77:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicerFundName(value);
      break;
    case 78:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginatorFundCode(value);
      break;
    case 79:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginatorFundName(value);
      break;
    case 80:
      var value = new proto.squareup.capital.plan.models.Fund;
      reader.readMessage(value,proto.squareup.capital.plan.models.Fund.deserializeBinaryFromReader);
      msg.setOriginatorFund(value);
      break;
    case 81:
      var value = new proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig;
      reader.readMessage(value,proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.deserializeBinaryFromReader);
      msg.setPaymentSettlementConfig(value);
      break;
    case 82:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPenaltyRateBps(value);
      break;
    case 83:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setPenaltyAmount(value);
      break;
    case 84:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.addBillingDates(value);
      break;
    case 85:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFirstPlanForBorrower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.Plan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.Plan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.Plan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Plan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.Plan.Status} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getFinancedAmount();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getFeeAmount();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getPaymentAmount();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getRemainingBalance();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAmortizationScheduleFinalPaymentAmount();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getAmortizationScheduleInterestFinanceCharge();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      51,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getOriginatedAt();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getAllocatedAt();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getClosedAt();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getMaturityAt();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 56));
  if (f != null) {
    writer.writeBool(
      56,
      f
    );
  }
  f = message.getRepaymentStartDate();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 58));
  if (f != null) {
    writer.writeFloat(
      58,
      f
    );
  }
  f = message.getAcceptanceDate();
  if (f != null) {
    writer.writeMessage(
      59,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.Plan.RiskGrade} */ (jspb.Message.getField(message, 61));
  if (f != null) {
    writer.writeEnum(
      61,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      62,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeDouble(
      63,
      f
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.Plan.PaymentFrequency} */ (jspb.Message.getField(message, 64));
  if (f != null) {
    writer.writeEnum(
      64,
      f
    );
  }
  f = message.getRequiredPaymentAmount();
  if (f != null) {
    writer.writeMessage(
      65,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 66));
  if (f != null) {
    writer.writeString(
      66,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 67));
  if (f != null) {
    writer.writeString(
      67,
      f
    );
  }
  f = message.getCloseAmount();
  if (f != null) {
    writer.writeMessage(
      68,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 69));
  if (f != null) {
    writer.writeInt32(
      69,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 70));
  if (f != null) {
    writer.writeBool(
      70,
      f
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      71,
      f,
      proto.squareup.capital.plan.models.Product.serializeBinaryToWriter
    );
  }
  f = message.getCreditLimitAmount();
  if (f != null) {
    writer.writeMessage(
      72,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 73));
  if (f != null) {
    writer.writeDouble(
      73,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 74));
  if (f != null) {
    writer.writeString(
      74,
      f
    );
  }
  f = message.getEnabledPaymentSchedule();
  if (f != null) {
    writer.writeMessage(
      75,
      f,
      proto.squareup.capital.plan.models.PaymentSchedule.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 76));
  if (f != null) {
    writer.writeString(
      76,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 77));
  if (f != null) {
    writer.writeString(
      77,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 78));
  if (f != null) {
    writer.writeString(
      78,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 79));
  if (f != null) {
    writer.writeString(
      79,
      f
    );
  }
  f = message.getOriginatorFund();
  if (f != null) {
    writer.writeMessage(
      80,
      f,
      proto.squareup.capital.plan.models.Fund.serializeBinaryToWriter
    );
  }
  f = message.getPaymentSettlementConfig();
  if (f != null) {
    writer.writeMessage(
      81,
      f,
      proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 82));
  if (f != null) {
    writer.writeInt32(
      82,
      f
    );
  }
  f = message.getPenaltyAmount();
  if (f != null) {
    writer.writeMessage(
      83,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getBillingDatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      84,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 85));
  if (f != null) {
    writer.writeBool(
      85,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.Plan.Status = {
  S_DO_NOT_USE: 0,
  PENDING: 1,
  ORIGINATED: 2,
  ALLOCATED: 3,
  CHARGED_OFF: 4,
  CLOSED: 10,
  CANCELED: 11,
  RENEWED: 12,
  PREPAID: 13,
  BREACHED: 14,
  WRITTEN_OFF: 15,
  CANCEL_PENDING: 16,
  TRANSFERRED: 17,
  DECLINED: 18
};

/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.Plan.RiskGrade = {
  R_DO_NOT_USE: 0,
  A: 13,
  A1: 1,
  A2: 2,
  B: 14,
  B1: 3,
  B2: 4,
  C: 15,
  C1: 5,
  C2: 6,
  D: 16,
  D1: 7,
  D2: 8,
  E: 17,
  E1: 9,
  E2: 10,
  E3: 19,
  E4: 20,
  F: 11,
  F1: 21,
  F2: 22,
  F3: 23,
  N: 12,
  NIL: 18
};

/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.Plan.PaymentFrequency = {
  PF_DO_NOT_USE: 0,
  MONTHLY: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    bankAccountToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig}
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig;
  return proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig}
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bank_account_token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.prototype.getBankAccountToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig} returns this
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.prototype.setBankAccountToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig} returns this
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.prototype.clearBankAccountToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig.prototype.hasBankAccountToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearToken = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string product_name = 3;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getProductName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setProductName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearProductName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasProductName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string product_version = 4;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getProductVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setProductVersion = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearProductVersion = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasProductVersion = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Status status = 5;
 * @return {!proto.squareup.capital.plan.models.Plan.Status}
 */
proto.squareup.capital.plan.models.Plan.prototype.getStatus = function() {
  return /** @type {!proto.squareup.capital.plan.models.Plan.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.Plan.Status} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional squareup.common.Money financed_amount = 6;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getFinancedAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 6));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setFinancedAmount = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearFinancedAmount = function() {
  return this.setFinancedAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasFinancedAmount = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional squareup.common.Money fee_amount = 7;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getFeeAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 7));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setFeeAmount = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearFeeAmount = function() {
  return this.setFeeAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasFeeAmount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double interest_rate_bps = 8;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getInterestRateBps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setInterestRateBps = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearInterestRateBps = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasInterestRateBps = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double apr_bps = 10;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getAprBps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setAprBps = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearAprBps = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasAprBps = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional squareup.common.Money payment_amount = 11;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPaymentAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 11));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setPaymentAmount = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPaymentAmount = function() {
  return this.setPaymentAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPaymentAmount = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double number_payment_periods = 12;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getNumberPaymentPeriods = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setNumberPaymentPeriods = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearNumberPaymentPeriods = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasNumberPaymentPeriods = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional squareup.common.Money remaining_balance = 13;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getRemainingBalance = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 13));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setRemainingBalance = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearRemainingBalance = function() {
  return this.setRemainingBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasRemainingBalance = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string customer_token = 14;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getCustomerToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setCustomerToken = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearCustomerToken = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasCustomerToken = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional squareup.common.Money amortization_schedule_final_payment_amount = 18;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getAmortizationScheduleFinalPaymentAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 18));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setAmortizationScheduleFinalPaymentAmount = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearAmortizationScheduleFinalPaymentAmount = function() {
  return this.setAmortizationScheduleFinalPaymentAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasAmortizationScheduleFinalPaymentAmount = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional squareup.common.Money amortization_schedule_interest_finance_charge = 19;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getAmortizationScheduleInterestFinanceCharge = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 19));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setAmortizationScheduleInterestFinanceCharge = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearAmortizationScheduleInterestFinanceCharge = function() {
  return this.setAmortizationScheduleInterestFinanceCharge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasAmortizationScheduleInterestFinanceCharge = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional squareup.common.time.DateTime created_at = 51;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getCreatedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 51));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 51, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional squareup.common.time.DateTime originated_at = 52;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getOriginatedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 52));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setOriginatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 52, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearOriginatedAt = function() {
  return this.setOriginatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasOriginatedAt = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional squareup.common.time.DateTime allocated_at = 53;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getAllocatedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 53));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setAllocatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 53, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearAllocatedAt = function() {
  return this.setAllocatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasAllocatedAt = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional squareup.common.time.DateTime closed_at = 54;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getClosedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 54));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setClosedAt = function(value) {
  return jspb.Message.setWrapperField(this, 54, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearClosedAt = function() {
  return this.setClosedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasClosedAt = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional squareup.common.time.DateTime maturity_at = 55;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getMaturityAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 55));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setMaturityAt = function(value) {
  return jspb.Message.setWrapperField(this, 55, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearMaturityAt = function() {
  return this.setMaturityAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasMaturityAt = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional bool is_renewal = 56;
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.getIsRenewal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 56, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setIsRenewal = function(value) {
  return jspb.Message.setField(this, 56, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearIsRenewal = function() {
  return jspb.Message.setField(this, 56, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasIsRenewal = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional squareup.common.time.DateTime repayment_start_date = 57;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getRepaymentStartDate = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 57));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setRepaymentStartDate = function(value) {
  return jspb.Message.setWrapperField(this, 57, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearRepaymentStartDate = function() {
  return this.setRepaymentStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasRepaymentStartDate = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional float payment_hold_rate = 58;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPaymentHoldRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 58, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setPaymentHoldRate = function(value) {
  return jspb.Message.setField(this, 58, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPaymentHoldRate = function() {
  return jspb.Message.setField(this, 58, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPaymentHoldRate = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional squareup.common.time.DateTime acceptance_date = 59;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.getAcceptanceDate = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 59));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setAcceptanceDate = function(value) {
  return jspb.Message.setWrapperField(this, 59, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearAcceptanceDate = function() {
  return this.setAcceptanceDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasAcceptanceDate = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional RiskGrade risk_grade = 61;
 * @return {!proto.squareup.capital.plan.models.Plan.RiskGrade}
 */
proto.squareup.capital.plan.models.Plan.prototype.getRiskGrade = function() {
  return /** @type {!proto.squareup.capital.plan.models.Plan.RiskGrade} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.Plan.RiskGrade} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setRiskGrade = function(value) {
  return jspb.Message.setField(this, 61, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearRiskGrade = function() {
  return jspb.Message.setField(this, 61, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasRiskGrade = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * repeated string tags = 62;
 * @return {!Array<string>}
 */
proto.squareup.capital.plan.models.Plan.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 62));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 62, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 62, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional double hold_rate_bps = 63;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getHoldRateBps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 63, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setHoldRateBps = function(value) {
  return jspb.Message.setField(this, 63, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearHoldRateBps = function() {
  return jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasHoldRateBps = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional PaymentFrequency payment_frequency = 64;
 * @return {!proto.squareup.capital.plan.models.Plan.PaymentFrequency}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPaymentFrequency = function() {
  return /** @type {!proto.squareup.capital.plan.models.Plan.PaymentFrequency} */ (jspb.Message.getFieldWithDefault(this, 64, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.Plan.PaymentFrequency} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setPaymentFrequency = function(value) {
  return jspb.Message.setField(this, 64, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPaymentFrequency = function() {
  return jspb.Message.setField(this, 64, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPaymentFrequency = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional squareup.common.Money required_payment_amount = 65;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getRequiredPaymentAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 65));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setRequiredPaymentAmount = function(value) {
  return jspb.Message.setWrapperField(this, 65, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearRequiredPaymentAmount = function() {
  return this.setRequiredPaymentAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasRequiredPaymentAmount = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional string identity_token = 66;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getIdentityToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 66, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setIdentityToken = function(value) {
  return jspb.Message.setField(this, 66, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearIdentityToken = function() {
  return jspb.Message.setField(this, 66, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasIdentityToken = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional string plan_id = 67;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPlanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 67, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setPlanId = function(value) {
  return jspb.Message.setField(this, 67, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPlanId = function() {
  return jspb.Message.setField(this, 67, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPlanId = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional squareup.common.Money close_amount = 68;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getCloseAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 68));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setCloseAmount = function(value) {
  return jspb.Message.setWrapperField(this, 68, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearCloseAmount = function() {
  return this.setCloseAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasCloseAmount = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional int32 number_months_to_maturity = 69;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getNumberMonthsToMaturity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 69, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setNumberMonthsToMaturity = function(value) {
  return jspb.Message.setField(this, 69, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearNumberMonthsToMaturity = function() {
  return jspb.Message.setField(this, 69, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasNumberMonthsToMaturity = function() {
  return jspb.Message.getField(this, 69) != null;
};


/**
 * optional bool cra_eligible = 70;
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.getCraEligible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 70, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setCraEligible = function(value) {
  return jspb.Message.setField(this, 70, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearCraEligible = function() {
  return jspb.Message.setField(this, 70, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasCraEligible = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional Product product = 71;
 * @return {?proto.squareup.capital.plan.models.Product}
 */
proto.squareup.capital.plan.models.Plan.prototype.getProduct = function() {
  return /** @type{?proto.squareup.capital.plan.models.Product} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.Product, 71));
};


/**
 * @param {?proto.squareup.capital.plan.models.Product|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 71, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 71) != null;
};


/**
 * optional squareup.common.Money credit_limit_amount = 72;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getCreditLimitAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 72));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setCreditLimitAmount = function(value) {
  return jspb.Message.setWrapperField(this, 72, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearCreditLimitAmount = function() {
  return this.setCreditLimitAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasCreditLimitAmount = function() {
  return jspb.Message.getField(this, 72) != null;
};


/**
 * optional double effective_hold_rate_bps = 73;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getEffectiveHoldRateBps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 73, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setEffectiveHoldRateBps = function(value) {
  return jspb.Message.setField(this, 73, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearEffectiveHoldRateBps = function() {
  return jspb.Message.setField(this, 73, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasEffectiveHoldRateBps = function() {
  return jspb.Message.getField(this, 73) != null;
};


/**
 * optional string fund_plan_token = 74;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getFundPlanToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 74, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setFundPlanToken = function(value) {
  return jspb.Message.setField(this, 74, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearFundPlanToken = function() {
  return jspb.Message.setField(this, 74, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasFundPlanToken = function() {
  return jspb.Message.getField(this, 74) != null;
};


/**
 * optional PaymentSchedule enabled_payment_schedule = 75;
 * @return {?proto.squareup.capital.plan.models.PaymentSchedule}
 */
proto.squareup.capital.plan.models.Plan.prototype.getEnabledPaymentSchedule = function() {
  return /** @type{?proto.squareup.capital.plan.models.PaymentSchedule} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.PaymentSchedule, 75));
};


/**
 * @param {?proto.squareup.capital.plan.models.PaymentSchedule|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setEnabledPaymentSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 75, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearEnabledPaymentSchedule = function() {
  return this.setEnabledPaymentSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasEnabledPaymentSchedule = function() {
  return jspb.Message.getField(this, 75) != null;
};


/**
 * optional string servicer_fund_code = 76;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getServicerFundCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 76, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setServicerFundCode = function(value) {
  return jspb.Message.setField(this, 76, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearServicerFundCode = function() {
  return jspb.Message.setField(this, 76, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasServicerFundCode = function() {
  return jspb.Message.getField(this, 76) != null;
};


/**
 * optional string servicer_fund_name = 77;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getServicerFundName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 77, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setServicerFundName = function(value) {
  return jspb.Message.setField(this, 77, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearServicerFundName = function() {
  return jspb.Message.setField(this, 77, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasServicerFundName = function() {
  return jspb.Message.getField(this, 77) != null;
};


/**
 * optional string originator_fund_code = 78;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getOriginatorFundCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 78, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setOriginatorFundCode = function(value) {
  return jspb.Message.setField(this, 78, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearOriginatorFundCode = function() {
  return jspb.Message.setField(this, 78, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasOriginatorFundCode = function() {
  return jspb.Message.getField(this, 78) != null;
};


/**
 * optional string originator_fund_name = 79;
 * @return {string}
 */
proto.squareup.capital.plan.models.Plan.prototype.getOriginatorFundName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 79, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setOriginatorFundName = function(value) {
  return jspb.Message.setField(this, 79, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearOriginatorFundName = function() {
  return jspb.Message.setField(this, 79, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasOriginatorFundName = function() {
  return jspb.Message.getField(this, 79) != null;
};


/**
 * optional Fund originator_fund = 80;
 * @return {?proto.squareup.capital.plan.models.Fund}
 */
proto.squareup.capital.plan.models.Plan.prototype.getOriginatorFund = function() {
  return /** @type{?proto.squareup.capital.plan.models.Fund} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.Fund, 80));
};


/**
 * @param {?proto.squareup.capital.plan.models.Fund|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setOriginatorFund = function(value) {
  return jspb.Message.setWrapperField(this, 80, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearOriginatorFund = function() {
  return this.setOriginatorFund(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasOriginatorFund = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional PaymentSettlementConfig payment_settlement_config = 81;
 * @return {?proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPaymentSettlementConfig = function() {
  return /** @type{?proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig, 81));
};


/**
 * @param {?proto.squareup.capital.plan.models.Plan.PaymentSettlementConfig|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setPaymentSettlementConfig = function(value) {
  return jspb.Message.setWrapperField(this, 81, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPaymentSettlementConfig = function() {
  return this.setPaymentSettlementConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPaymentSettlementConfig = function() {
  return jspb.Message.getField(this, 81) != null;
};


/**
 * optional int32 penalty_rate_bps = 82;
 * @return {number}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPenaltyRateBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 82, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setPenaltyRateBps = function(value) {
  return jspb.Message.setField(this, 82, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPenaltyRateBps = function() {
  return jspb.Message.setField(this, 82, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPenaltyRateBps = function() {
  return jspb.Message.getField(this, 82) != null;
};


/**
 * optional squareup.common.Money penalty_amount = 83;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.Plan.prototype.getPenaltyAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 83));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setPenaltyAmount = function(value) {
  return jspb.Message.setWrapperField(this, 83, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearPenaltyAmount = function() {
  return this.setPenaltyAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasPenaltyAmount = function() {
  return jspb.Message.getField(this, 83) != null;
};


/**
 * repeated squareup.common.time.DateTime billing_dates = 84;
 * @return {!Array<!proto.squareup.common.time.DateTime>}
 */
proto.squareup.capital.plan.models.Plan.prototype.getBillingDatesList = function() {
  return /** @type{!Array<!proto.squareup.common.time.DateTime>} */ (
    jspb.Message.getRepeatedWrapperField(this, time_pb.DateTime, 84));
};


/**
 * @param {!Array<!proto.squareup.common.time.DateTime>} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
*/
proto.squareup.capital.plan.models.Plan.prototype.setBillingDatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 84, value);
};


/**
 * @param {!proto.squareup.common.time.DateTime=} opt_value
 * @param {number=} opt_index
 * @return {!proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Plan.prototype.addBillingDates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 84, opt_value, proto.squareup.common.time.DateTime, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearBillingDatesList = function() {
  return this.setBillingDatesList([]);
};


/**
 * optional bool first_plan_for_borrower = 85;
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.getFirstPlanForBorrower = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 85, false));
};


/**
 * @param {boolean} value
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.setFirstPlanForBorrower = function(value) {
  return jspb.Message.setField(this, 85, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Plan} returns this
 */
proto.squareup.capital.plan.models.Plan.prototype.clearFirstPlanForBorrower = function() {
  return jspb.Message.setField(this, 85, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Plan.prototype.hasFirstPlanForBorrower = function() {
  return jspb.Message.getField(this, 85) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PlanMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PlanMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PlanMetadata}
 */
proto.squareup.capital.plan.models.PlanMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PlanMetadata;
  return proto.squareup.capital.plan.models.PlanMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PlanMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PlanMetadata}
 */
proto.squareup.capital.plan.models.PlanMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PlanMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PlanMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanMetadata} returns this
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanMetadata} returns this
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanMetadata} returns this
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanMetadata} returns this
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.clearValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanMetadata.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PlanDelinquency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PlanDelinquency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanDelinquency.toObject = function(includeInstance, msg) {
  var f, obj = {
    planToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    asOf: (f = msg.getAsOf()) && time_pb.DateTime.toObject(includeInstance, f),
    applyPendingPaymentRule: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    nonDueBalance: (f = msg.getNonDueBalance()) && currency_pb.Money.toObject(includeInstance, f),
    upcomingDueBalance: (f = msg.getUpcomingDueBalance()) && currency_pb.Money.toObject(includeInstance, f),
    pastDueBalance: (f = msg.getPastDueBalance()) && currency_pb.Money.toObject(includeInstance, f),
    daysPastDue: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    upcomingDuePayableAt: (f = msg.getUpcomingDuePayableAt()) && time_pb.DateTime.toObject(includeInstance, f),
    upcomingDueAt: (f = msg.getUpcomingDueAt()) && time_pb.DateTime.toObject(includeInstance, f),
    upcomingDueCapacityAmount: (f = msg.getUpcomingDueCapacityAmount()) && currency_pb.Money.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency}
 */
proto.squareup.capital.plan.models.PlanDelinquency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PlanDelinquency;
  return proto.squareup.capital.plan.models.PlanDelinquency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PlanDelinquency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency}
 */
proto.squareup.capital.plan.models.PlanDelinquency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanToken(value);
      break;
    case 2:
      var value = /** @type {!proto.squareup.capital.plan.models.PlanDelinquency.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setAsOf(value);
      break;
    case 4:
      var value = /** @type {!proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule} */ (reader.readEnum());
      msg.setApplyPendingPaymentRule(value);
      break;
    case 5:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setNonDueBalance(value);
      break;
    case 6:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setUpcomingDueBalance(value);
      break;
    case 7:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setPastDueBalance(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDaysPastDue(value);
      break;
    case 9:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setUpcomingDuePayableAt(value);
      break;
    case 10:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setUpcomingDueAt(value);
      break;
    case 11:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setUpcomingDueCapacityAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PlanDelinquency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PlanDelinquency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanDelinquency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.PlanDelinquency.Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAsOf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getNonDueBalance();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getUpcomingDueBalance();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = message.getPastDueBalance();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getUpcomingDuePayableAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getUpcomingDueAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getUpcomingDueCapacityAmount();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.PlanDelinquency.Type = {
  PDT_DO_NOT_USE: 0,
  PRIMARY: 1,
  MONTHLY_STATEMENT: 2
};

/**
 * @enum {number}
 */
proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule = {
  DO_NOT_USE: 0,
  DEFAULT_RULE: 1,
  ALWAYS_APPLY_PENDING_PAYMENTS: 2,
  NEVER_APPLY_PENDING_PAYMENTS: 3
};

/**
 * optional string plan_token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getPlanToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setPlanToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearPlanToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasPlanToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency.Type}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getType = function() {
  return /** @type {!proto.squareup.capital.plan.models.PlanDelinquency.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.PlanDelinquency.Type} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional squareup.common.time.DateTime as_of = 3;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getAsOf = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 3));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setAsOf = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearAsOf = function() {
  return this.setAsOf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasAsOf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PendingPaymentRule apply_pending_payment_rule = 4;
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getApplyPendingPaymentRule = function() {
  return /** @type {!proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.squareup.capital.plan.models.PlanDelinquency.PendingPaymentRule} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setApplyPendingPaymentRule = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearApplyPendingPaymentRule = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasApplyPendingPaymentRule = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional squareup.common.Money non_due_balance = 5;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getNonDueBalance = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 5));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setNonDueBalance = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearNonDueBalance = function() {
  return this.setNonDueBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasNonDueBalance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional squareup.common.Money upcoming_due_balance = 6;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getUpcomingDueBalance = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 6));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setUpcomingDueBalance = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearUpcomingDueBalance = function() {
  return this.setUpcomingDueBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasUpcomingDueBalance = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional squareup.common.Money past_due_balance = 7;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getPastDueBalance = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 7));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setPastDueBalance = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearPastDueBalance = function() {
  return this.setPastDueBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasPastDueBalance = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 days_past_due = 8;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getDaysPastDue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setDaysPastDue = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearDaysPastDue = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasDaysPastDue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional squareup.common.time.DateTime upcoming_due_payable_at = 9;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getUpcomingDuePayableAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 9));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setUpcomingDuePayableAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearUpcomingDuePayableAt = function() {
  return this.setUpcomingDuePayableAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasUpcomingDuePayableAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional squareup.common.time.DateTime upcoming_due_at = 10;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getUpcomingDueAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 10));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setUpcomingDueAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearUpcomingDueAt = function() {
  return this.setUpcomingDueAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasUpcomingDueAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional squareup.common.Money upcoming_due_capacity_amount = 11;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.getUpcomingDueCapacityAmount = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 11));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
*/
proto.squareup.capital.plan.models.PlanDelinquency.prototype.setUpcomingDueCapacityAmount = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanDelinquency} returns this
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.clearUpcomingDueCapacityAmount = function() {
  return this.setUpcomingDueCapacityAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanDelinquency.prototype.hasUpcomingDueCapacityAmount = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.Txn.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.Txn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.Txn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Txn.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    settlementDetail: (f = msg.getSettlementDetail()) && proto.squareup.capital.plan.models.SettlementDetail.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && time_pb.DateTime.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.Txn}
 */
proto.squareup.capital.plan.models.Txn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.Txn;
  return proto.squareup.capital.plan.models.Txn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.Txn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.Txn}
 */
proto.squareup.capital.plan.models.Txn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.squareup.capital.plan.models.SettlementDetail;
      reader.readMessage(value,proto.squareup.capital.plan.models.SettlementDetail.deserializeBinaryFromReader);
      msg.setSettlementDetail(value);
      break;
    case 4:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.Txn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.Txn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.Txn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Txn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSettlementDetail();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.squareup.capital.plan.models.SettlementDetail.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.Txn.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
 */
proto.squareup.capital.plan.models.Txn.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
 */
proto.squareup.capital.plan.models.Txn.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Txn.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.squareup.capital.plan.models.Txn.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
 */
proto.squareup.capital.plan.models.Txn.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
 */
proto.squareup.capital.plan.models.Txn.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Txn.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SettlementDetail settlement_detail = 3;
 * @return {?proto.squareup.capital.plan.models.SettlementDetail}
 */
proto.squareup.capital.plan.models.Txn.prototype.getSettlementDetail = function() {
  return /** @type{?proto.squareup.capital.plan.models.SettlementDetail} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.SettlementDetail, 3));
};


/**
 * @param {?proto.squareup.capital.plan.models.SettlementDetail|undefined} value
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
*/
proto.squareup.capital.plan.models.Txn.prototype.setSettlementDetail = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
 */
proto.squareup.capital.plan.models.Txn.prototype.clearSettlementDetail = function() {
  return this.setSettlementDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Txn.prototype.hasSettlementDetail = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional squareup.common.time.DateTime created_at = 4;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.Txn.prototype.getCreatedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 4));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
*/
proto.squareup.capital.plan.models.Txn.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Txn} returns this
 */
proto.squareup.capital.plan.models.Txn.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Txn.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.squareup.capital.plan.models.SettlementDetail.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.SettlementDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.SettlementDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.SettlementDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    toPayerList: jspb.Message.toObjectList(msg.getToPayerList(),
    proto.squareup.capital.plan.models.SettlementInstruction.toObject, includeInstance),
    toInvestorList: jspb.Message.toObjectList(msg.getToInvestorList(),
    proto.squareup.capital.plan.models.SettlementInstruction.toObject, includeInstance),
    toBorrowerList: jspb.Message.toObjectList(msg.getToBorrowerList(),
    proto.squareup.capital.plan.models.SettlementInstruction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.SettlementDetail}
 */
proto.squareup.capital.plan.models.SettlementDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.SettlementDetail;
  return proto.squareup.capital.plan.models.SettlementDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.SettlementDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.SettlementDetail}
 */
proto.squareup.capital.plan.models.SettlementDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.squareup.capital.plan.models.SettlementInstruction;
      reader.readMessage(value,proto.squareup.capital.plan.models.SettlementInstruction.deserializeBinaryFromReader);
      msg.addToPayer(value);
      break;
    case 2:
      var value = new proto.squareup.capital.plan.models.SettlementInstruction;
      reader.readMessage(value,proto.squareup.capital.plan.models.SettlementInstruction.deserializeBinaryFromReader);
      msg.addToInvestor(value);
      break;
    case 3:
      var value = new proto.squareup.capital.plan.models.SettlementInstruction;
      reader.readMessage(value,proto.squareup.capital.plan.models.SettlementInstruction.deserializeBinaryFromReader);
      msg.addToBorrower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.SettlementDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.SettlementDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.SettlementDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToPayerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.squareup.capital.plan.models.SettlementInstruction.serializeBinaryToWriter
    );
  }
  f = message.getToInvestorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.squareup.capital.plan.models.SettlementInstruction.serializeBinaryToWriter
    );
  }
  f = message.getToBorrowerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.squareup.capital.plan.models.SettlementInstruction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SettlementInstruction to_payer = 1;
 * @return {!Array<!proto.squareup.capital.plan.models.SettlementInstruction>}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.getToPayerList = function() {
  return /** @type{!Array<!proto.squareup.capital.plan.models.SettlementInstruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.squareup.capital.plan.models.SettlementInstruction, 1));
};


/**
 * @param {!Array<!proto.squareup.capital.plan.models.SettlementInstruction>} value
 * @return {!proto.squareup.capital.plan.models.SettlementDetail} returns this
*/
proto.squareup.capital.plan.models.SettlementDetail.prototype.setToPayerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.squareup.capital.plan.models.SettlementInstruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.addToPayer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squareup.capital.plan.models.SettlementInstruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.squareup.capital.plan.models.SettlementDetail} returns this
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.clearToPayerList = function() {
  return this.setToPayerList([]);
};


/**
 * repeated SettlementInstruction to_investor = 2;
 * @return {!Array<!proto.squareup.capital.plan.models.SettlementInstruction>}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.getToInvestorList = function() {
  return /** @type{!Array<!proto.squareup.capital.plan.models.SettlementInstruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.squareup.capital.plan.models.SettlementInstruction, 2));
};


/**
 * @param {!Array<!proto.squareup.capital.plan.models.SettlementInstruction>} value
 * @return {!proto.squareup.capital.plan.models.SettlementDetail} returns this
*/
proto.squareup.capital.plan.models.SettlementDetail.prototype.setToInvestorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.squareup.capital.plan.models.SettlementInstruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.addToInvestor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.squareup.capital.plan.models.SettlementInstruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.squareup.capital.plan.models.SettlementDetail} returns this
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.clearToInvestorList = function() {
  return this.setToInvestorList([]);
};


/**
 * repeated SettlementInstruction to_borrower = 3;
 * @return {!Array<!proto.squareup.capital.plan.models.SettlementInstruction>}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.getToBorrowerList = function() {
  return /** @type{!Array<!proto.squareup.capital.plan.models.SettlementInstruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.squareup.capital.plan.models.SettlementInstruction, 3));
};


/**
 * @param {!Array<!proto.squareup.capital.plan.models.SettlementInstruction>} value
 * @return {!proto.squareup.capital.plan.models.SettlementDetail} returns this
*/
proto.squareup.capital.plan.models.SettlementDetail.prototype.setToBorrowerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.squareup.capital.plan.models.SettlementInstruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction}
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.addToBorrower = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.squareup.capital.plan.models.SettlementInstruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.squareup.capital.plan.models.SettlementDetail} returns this
 */
proto.squareup.capital.plan.models.SettlementDetail.prototype.clearToBorrowerList = function() {
  return this.setToBorrowerList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.SettlementInstruction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.SettlementInstruction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.SettlementInstruction.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    amountCents: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction}
 */
proto.squareup.capital.plan.models.SettlementInstruction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.SettlementInstruction;
  return proto.squareup.capital.plan.models.SettlementInstruction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.SettlementInstruction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction}
 */
proto.squareup.capital.plan.models.SettlementInstruction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntryToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmountCents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.SettlementInstruction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.SettlementInstruction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.SettlementInstruction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string entry_token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.getEntryToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction} returns this
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.setEntryToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction} returns this
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.clearEntryToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.hasEntryToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 amount_cents = 2;
 * @return {number}
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.getAmountCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction} returns this
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.setAmountCents = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.SettlementInstruction} returns this
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.clearAmountCents = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.SettlementInstruction.prototype.hasAmountCents = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PlanPerformance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PlanPerformance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanPerformance.toObject = function(includeInstance, msg) {
  var f, obj = {
    planToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    fundPlanToken: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    estimatedCompletionDate: (f = msg.getEstimatedCompletionDate()) && time_pb.DateTime.toObject(includeInstance, f),
    daysPastDue: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    amountPastDue: (f = msg.getAmountPastDue()) && currency_pb.Money.toObject(includeInstance, f),
    forecastedLoss: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    lastPaymentDate: (f = msg.getLastPaymentDate()) && time_pb.DateTime.toObject(includeInstance, f),
    pastDueStartDate: (f = msg.getPastDueStartDate()) && time_pb.DateTime.toObject(includeInstance, f),
    daysPastDue30plusAtPlanClose: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    chargeOff: (f = msg.getChargeOff()) && proto.squareup.capital.plan.models.ChargeOff.toObject(includeInstance, f),
    contiguousDelinquencyPeriod30plusStartedAt: (f = msg.getContiguousDelinquencyPeriod30plusStartedAt()) && time_pb.DateTime.toObject(includeInstance, f),
    contiguousDelinquencyPeriod30plusDayCount: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    nextDueTime: (f = msg.getNextDueTime()) && time_pb.DateTime.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance}
 */
proto.squareup.capital.plan.models.PlanPerformance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PlanPerformance;
  return proto.squareup.capital.plan.models.PlanPerformance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PlanPerformance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance}
 */
proto.squareup.capital.plan.models.PlanPerformance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFundPlanToken(value);
      break;
    case 3:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setEstimatedCompletionDate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDaysPastDue(value);
      break;
    case 5:
      var value = new currency_pb.Money;
      reader.readMessage(value,currency_pb.Money.deserializeBinaryFromReader);
      msg.setAmountPastDue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setForecastedLoss(value);
      break;
    case 7:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setLastPaymentDate(value);
      break;
    case 8:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setPastDueStartDate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDaysPastDue30plusAtPlanClose(value);
      break;
    case 10:
      var value = new proto.squareup.capital.plan.models.ChargeOff;
      reader.readMessage(value,proto.squareup.capital.plan.models.ChargeOff.deserializeBinaryFromReader);
      msg.setChargeOff(value);
      break;
    case 11:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setContiguousDelinquencyPeriod30plusStartedAt(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContiguousDelinquencyPeriod30plusDayCount(value);
      break;
    case 13:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setNextDueTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PlanPerformance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PlanPerformance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanPerformance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEstimatedCompletionDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAmountPastDue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      currency_pb.Money.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLastPaymentDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getPastDueStartDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getChargeOff();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.squareup.capital.plan.models.ChargeOff.serializeBinaryToWriter
    );
  }
  f = message.getContiguousDelinquencyPeriod30plusStartedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getNextDueTime();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
};


/**
 * optional string plan_token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getPlanToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.setPlanToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearPlanToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasPlanToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string fund_plan_token = 2;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getFundPlanToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.setFundPlanToken = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearFundPlanToken = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasFundPlanToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional squareup.common.time.DateTime estimated_completion_date = 3;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getEstimatedCompletionDate = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 3));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setEstimatedCompletionDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearEstimatedCompletionDate = function() {
  return this.setEstimatedCompletionDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasEstimatedCompletionDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 days_past_due = 4;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getDaysPastDue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.setDaysPastDue = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearDaysPastDue = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasDaysPastDue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional squareup.common.Money amount_past_due = 5;
 * @return {?proto.squareup.common.Money}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getAmountPastDue = function() {
  return /** @type{?proto.squareup.common.Money} */ (
    jspb.Message.getWrapperField(this, currency_pb.Money, 5));
};


/**
 * @param {?proto.squareup.common.Money|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setAmountPastDue = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearAmountPastDue = function() {
  return this.setAmountPastDue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasAmountPastDue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double forecasted_loss = 6;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getForecastedLoss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.setForecastedLoss = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearForecastedLoss = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasForecastedLoss = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional squareup.common.time.DateTime last_payment_date = 7;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getLastPaymentDate = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 7));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setLastPaymentDate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearLastPaymentDate = function() {
  return this.setLastPaymentDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasLastPaymentDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional squareup.common.time.DateTime past_due_start_date = 8;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getPastDueStartDate = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 8));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setPastDueStartDate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearPastDueStartDate = function() {
  return this.setPastDueStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasPastDueStartDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 days_past_due_30plus_at_plan_close = 9;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getDaysPastDue30plusAtPlanClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.setDaysPastDue30plusAtPlanClose = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearDaysPastDue30plusAtPlanClose = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasDaysPastDue30plusAtPlanClose = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ChargeOff charge_off = 10;
 * @return {?proto.squareup.capital.plan.models.ChargeOff}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getChargeOff = function() {
  return /** @type{?proto.squareup.capital.plan.models.ChargeOff} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.ChargeOff, 10));
};


/**
 * @param {?proto.squareup.capital.plan.models.ChargeOff|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setChargeOff = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearChargeOff = function() {
  return this.setChargeOff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasChargeOff = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional squareup.common.time.DateTime contiguous_delinquency_period_30plus_started_at = 11;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getContiguousDelinquencyPeriod30plusStartedAt = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 11));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setContiguousDelinquencyPeriod30plusStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearContiguousDelinquencyPeriod30plusStartedAt = function() {
  return this.setContiguousDelinquencyPeriod30plusStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasContiguousDelinquencyPeriod30plusStartedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 contiguous_delinquency_period_30plus_day_count = 12;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getContiguousDelinquencyPeriod30plusDayCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.setContiguousDelinquencyPeriod30plusDayCount = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearContiguousDelinquencyPeriod30plusDayCount = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasContiguousDelinquencyPeriod30plusDayCount = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional squareup.common.time.DateTime next_due_time = 13;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.getNextDueTime = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 13));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
*/
proto.squareup.capital.plan.models.PlanPerformance.prototype.setNextDueTime = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPerformance} returns this
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.clearNextDueTime = function() {
  return this.setNextDueTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPerformance.prototype.hasNextDueTime = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PlanPastDueSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    planToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    asOfTime: (f = msg.getAsOfTime()) && time_pb.DateTime.toObject(includeInstance, f),
    asOfDaysSinceOrigination: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    amountCents: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    days: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PlanPastDueSnapshot;
  return proto.squareup.capital.plan.models.PlanPastDueSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanToken(value);
      break;
    case 2:
      var value = new time_pb.DateTime;
      reader.readMessage(value,time_pb.DateTime.deserializeBinaryFromReader);
      msg.setAsOfTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAsOfDaysSinceOrigination(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountCents(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PlanPastDueSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAsOfTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      time_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string plan_token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.getPlanToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.setPlanToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.clearPlanToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.hasPlanToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional squareup.common.time.DateTime as_of_time = 2;
 * @return {?proto.squareup.common.time.DateTime}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.getAsOfTime = function() {
  return /** @type{?proto.squareup.common.time.DateTime} */ (
    jspb.Message.getWrapperField(this, time_pb.DateTime, 2));
};


/**
 * @param {?proto.squareup.common.time.DateTime|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
*/
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.setAsOfTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.clearAsOfTime = function() {
  return this.setAsOfTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.hasAsOfTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 as_of_days_since_origination = 3;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.getAsOfDaysSinceOrigination = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.setAsOfDaysSinceOrigination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.clearAsOfDaysSinceOrigination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.hasAsOfDaysSinceOrigination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 amount_cents = 4;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.getAmountCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.setAmountCents = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.clearAmountCents = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.hasAmountCents = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 days = 5;
 * @return {number}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.getDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.setDays = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanPastDueSnapshot} returns this
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.clearDays = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanPastDueSnapshot.prototype.hasDays = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PlanFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PlanFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PlanFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    productName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PlanFilter}
 */
proto.squareup.capital.plan.models.PlanFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PlanFilter;
  return proto.squareup.capital.plan.models.PlanFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PlanFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PlanFilter}
 */
proto.squareup.capital.plan.models.PlanFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PlanFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PlanFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PlanFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string product_name = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.PlanFilter.prototype.getProductName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.PlanFilter} returns this
 */
proto.squareup.capital.plan.models.PlanFilter.prototype.setProductName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanFilter} returns this
 */
proto.squareup.capital.plan.models.PlanFilter.prototype.clearProductName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanFilter.prototype.hasProductName = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.PlanQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.PlanQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.PlanQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.squareup.capital.plan.models.PlanFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.PlanQuery}
 */
proto.squareup.capital.plan.models.PlanQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.PlanQuery;
  return proto.squareup.capital.plan.models.PlanQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.PlanQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.PlanQuery}
 */
proto.squareup.capital.plan.models.PlanQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.squareup.capital.plan.models.PlanFilter;
      reader.readMessage(value,proto.squareup.capital.plan.models.PlanFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.PlanQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.PlanQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.PlanQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.PlanQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.squareup.capital.plan.models.PlanFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional PlanFilter filter = 1;
 * @return {?proto.squareup.capital.plan.models.PlanFilter}
 */
proto.squareup.capital.plan.models.PlanQuery.prototype.getFilter = function() {
  return /** @type{?proto.squareup.capital.plan.models.PlanFilter} */ (
    jspb.Message.getWrapperField(this, proto.squareup.capital.plan.models.PlanFilter, 1));
};


/**
 * @param {?proto.squareup.capital.plan.models.PlanFilter|undefined} value
 * @return {!proto.squareup.capital.plan.models.PlanQuery} returns this
*/
proto.squareup.capital.plan.models.PlanQuery.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.squareup.capital.plan.models.PlanQuery} returns this
 */
proto.squareup.capital.plan.models.PlanQuery.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.PlanQuery.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.squareup.capital.plan.models.Fund.prototype.toObject = function(opt_includeInstance) {
  return proto.squareup.capital.plan.models.Fund.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.squareup.capital.plan.models.Fund} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Fund.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    code: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    nickname: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.squareup.capital.plan.models.Fund}
 */
proto.squareup.capital.plan.models.Fund.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.squareup.capital.plan.models.Fund;
  return proto.squareup.capital.plan.models.Fund.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.squareup.capital.plan.models.Fund} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.squareup.capital.plan.models.Fund}
 */
proto.squareup.capital.plan.models.Fund.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.squareup.capital.plan.models.Fund.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.squareup.capital.plan.models.Fund.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.squareup.capital.plan.models.Fund} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.squareup.capital.plan.models.Fund.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.squareup.capital.plan.models.Fund.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Fund.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.squareup.capital.plan.models.Fund.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.setCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.clearCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Fund.prototype.hasCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.squareup.capital.plan.models.Fund.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Fund.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string nickname = 4;
 * @return {string}
 */
proto.squareup.capital.plan.models.Fund.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.setNickname = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.squareup.capital.plan.models.Fund} returns this
 */
proto.squareup.capital.plan.models.Fund.prototype.clearNickname = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.squareup.capital.plan.models.Fund.prototype.hasNickname = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.squareup.capital.plan.models);
